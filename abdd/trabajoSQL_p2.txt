
CREATE SEQUENCE SQ_CLIENTE START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE SQ_PERSONA START WITH 1
INCREMENT BY 1;

CREATE OR REPLACE PACKAGE PK_GESTION_CLIENTES AS
    CuentasAlta EXCEPTION;
    ModificarCuenta EXCEPTION;
    CuentasBaja EXCEPTION;
    AutorizadoExiste EXCEPTION;
    AutorizadoModificar EXCEPTION;
    AutorizadoEliminar EXCEPTION;
    TipoException EXCEPTION;
    AutorizacionNoExiste EXCEPTION;
    PROCEDURE ALTA_CLIENTE(PK VARCHAR2);
    PROCEDURE MODIFICAR_CLIENTE(PK VARCHAR2, EST CHAR, BAJA DATE, DIREC VARCHAR2, CIU VARCHAR2, COD INTEGER, PA VARCHAR2);
    PROCEDURE BAJA_CLIENTE(PK VARCHAR2);
    PROCEDURE ADD_AUTORIZADO(TIPO VARCHAR2, PK VARCHAR2, EMP VARCHAR2);
    PROCEDURE MODIFICAR_AUTORIZADO(PK VARCHAR2, NOM VARCHAR2, APEL VARCHAR2, DIREC VARCHAR2, NACI DATE, EST CHAR, FIN DATE);
    PROCEDURE ELIMINAR_AUTORIZADO(PK VARCHAR2, EMP VARCHAR2);
    
END PK_GESTION_CLIENTES;

CREATE OR REPLACE PACKAGE BODY PK_GESTION_CLIENTES AS
    PROCEDURE ALTA_CLIENTE(PK VARCHAR2) IS
    BEGIN
        IF (SELECT * FROM FINTECH.CUENTA_FINTECH WHERE ID = PK)!=NULL THEN
            UPDATE FINTECH.CLIENTE SET ESTADO = '1', FECHADEALTA = SYSDATE WHERE ID = PK;
        ELSE RAISE CuentasAlta;
        END IF;
    END;
    
    PROCEDURE MODIFICAR_CLIENTE(PK VARCHAR2, EST CHAR, BAJA DATE, DIREC VARCHAR2, CIU VARCHAR2, COD INTEGER, PA VARCHAR2) IS
    BEGIN
        IF (SELECT * FROM FINTECH.CUENTA_FINTECH WHERE ID = PK)!=NULL THEN
            UPDATE FINTECH.CLIENTE SET ESTADO = EST, FECHA_BAJA = BAJA, DIRECCION = DIREC, CIUDAD = CIU, CODIGOPOSTAL = COD, PAIS = PA WHERE ID = PK;
        ELSE RAISE ModificarCuenta;
        END IF;
    END;
    
   PROCEDURE BAJA_CLIENTE(PK VARCHAR2) IS
   BEGIN
        IF (SELECT * FROM FINTECH.CUENTA_FINTECH WHERE ESTADO = '1' AND CLIENTE_ID = PK)=NULL THEN
            UPDATE FINTECH.CLIENTE SET ESTADO = '0', FECHADEBAJA = SYSDATE WHERE ID = PK;
        ELSE RAISE CuentasBaja;
        END IF;
   END;

    PROCEDURE ADD_AUTORIZADO(TIPO VARCHAR2, PK VARCHAR2, EMP VARCHAR2) AS
    BEGIN
        IF(TIPO NOT LIKE 'CONSULTA' OR TIPO NOT LIKE 'OPERACION') THEN
            RAISE TipoException;
        END IF;
        IF(SELECT * FROM FINTECH.PERSONA_AUTORIZADA WHERE ID LIKE PK)!=NULL AND (SELECT * FROM FINTECH.EMPRESA WHERE ID LIKE EMP)!=NULL THEN
            INSERT INTO FINTECH.AUTORIZACION VALUES(TIPO, PK, EMP);
        ELSE RAISE AutorizadoExiste;
        END IF;
    END;

    
    PROCEDURE MODIFICAR_AUTORIZADO(PK VARCHAR2, NOM VARCHAR2, APEL VARCHAR2, DIREC VARCHAR2, NACI DATE, EST CHAR, FIN DATE, TIP VARCHAR2) IS
    BEGIN
        IF(TIPO NOT LIKE 'CONSULTA' OR TIPO NOT LIKE 'OPERACION') THEN
            RAISE TipoException;
        END IF;
        IF(SELECT * FROM FINTECH.PERSONA_AUTORIZADA WHERE ID LIKE PK)!=NULL AND (SELECT * FROM FINTECH.EMPRESA WHERE ID LIKE EMP)!=NULL THEN
            UPDATE FINTECH.PERSONA_AUTORIZADA SET NOMBRE = NOM, APELLIDOS = APEL, DIRECCION = DIREC, FECHA_NACIMIENTO = NACI, ESTADO = EST, FECHAFIN = FIN, TIPO = TIP WHERE ID = PK;
        ELSE RAISE AutorizadoModificar;
        END IF;
    END;
    
    PROCEDURE ELIMINAR_AUTORIZADO(PK VARCHAR2, EMP VARCHAR2) AS
    BEGIN
        IF(SELECT * FROM FINTECH.AUTORIZACION WHERE PERSONA_AUTORIZADA_ID LIKE PK AND EMPRESA_ID LIKE EMP)!=NULL THEN
            DELETE FROM FINTECH.AUTORIZACION WHERE PERSONA_AUTORIZADA_ID = PK AND EMPRESA_ID = EMP;
        ELSE RAISE AutorizacionNoExiste;
        END IF;
        IF(SELECT * FROM FINTECH.AUTORIZACION WHERE PERSONA_AUTORIZADA_ID = PK)=NULL THEN
            UPDATE FINTECH.PERSONA_AUTORIZADA SET ESTADO = 'BORRADO', FECHAFIN = SYSDATE WHERE ID = PK;
        ELSE RAISE AutorizadoEliminar;
        END IF;
    END;
    

END PK_GESTION_CLIENTES;


CREATE OR REPLACE PACKAGE PK_GESTION_CUENTAS AS
    ClienteException EXCEPTION;
    CuentaException EXCEPTION;
    ReferenciaException EXCEPTION;
    SaldoException EXCEPTION;
    PROCEDURE APERTURA_CUENTA_POOLED(ID_CLIENTE VARCHAR2, IBN VARCHAR2, SWFT VARCHAR2, ESTA CHAR, FECHACIERRRE DATE, CLASI VARCHAR2);
    PROCEDURE APERTURA_CUENTA_SEGREGATED(ID_CLIENTE VARCHAR2, IBN VARCHAR2, SWFT VARCHAR2, ESTA CHAR, FECHACIERRRE DATE, CLASI VARCHAR2, COMISION DECIMAL, REFERENCIA VARCHAR2);
    PROCEDURE CIERRE_CUENTA_POOLED(IBAN VARCHAR2);
    PROCEDURE CIERRE_CUENTA_SEGREGADA(IBAN VARCHAR2);
    

END PK_GESTION_CUENTAS;

CREATE OR REPLACE PACKAGE BODY PK_GESTION_CUENTAS AS
    PROCEDURE APERTURA_CUENTA_POOLED(ID_CLIENTE VARCHAR2, IBN VARCHAR2, SWFT VARCHAR2, ESTA CHAR, FECHACIERRRE DATE, CLASI VARCHAR2) IS
    BEGIN
        IF(SELECT * FROM FINTECH.CLIENTE WHERE ID = ID_CLIENTE AND ESTADO LIKE '1')=NULL THEN
            RAISE ClienteException;
        END IF;
        IF (SELECT * FROM FINTECH.CUENTA WHERE IBAN LIKE IBN)!=NULL THEN
            RAISE CuentaException;
        END IF;
        
        INSERT INTO FINTECH.CUENTA VALUES(IBN, SWFT);
        INSERT INTO FINTECH.CUENTA_FINTECH VALUES(IBN, ESTA, SYSDATE, FECHACIERRE, CLASI);
        INSERT INTO FINTECH.POOLED_ACCOUNT VALUES(IBN);
        
    END;
    
    PROCEDURE APERTURA_CUENTA_SEGREGATED(ID_CLIENTE VARCHAR2, IBN VARCHAR2, SWFT VARCHAR2, ESTA CHAR, FECHACIERRRE DATE, CLASI VARCHAR2, COMISION DECIMAL, REFERENCIA VARCHAR2) IS
    BEGIN
        IF(SELECT * FROM FINTECH.CLIENTE WHERE ID = ID_CLIENTE AND ESTADO LIKE '1')=NULL THEN
            RAISE ClienteException;
        END IF;
        IF (SELECT * FROM FINTECH.CUENTA WHERE IBAN LIKE IBN)!=NULL THEN
            RAISE CuentaException;
        END IF;
        IF (SELECT * FROM FINTECH.CUENTA WHERE IBAN LIKE REFERENCIA)=NULL THEN
            RAISE ReferenciaException;
        END IF;
        INSERT INTO FINTECH.CUENTA VALUES(IBN, SWFT);
        INSERT INTO FINTECH.CUENTA_FINTECH VALUES(IBN, ESTA, SYSDATE, FECHACIERRE, CLASI);
        INSERT INTO FINTECH.SEGREGADA VALUES(IBN, COMISION, REFERENCIA);
        
    END;
    
    PROCEDURE CIERRE_CUENTA_POOLED(IBAN VARCHAR2) IS
    BEGIN
        IF (SELECT * FROM FINTECH.CUENTA WHERE IBAN LIKE IBN)=NULL THEN
            RAISE CuentaException;
        END IF;
        IF (SELECT SUM(SALDO) FROM FINTECH.DEPOSITADA_EN WHERE POOLED_ACCOUNT_IBAN LIKE IBAN) = 0 THEN
            UPDATE FINTECH.CUENTA_FINTECH SET ESTADO = '0', FECHABAJA = SYSDATE WHERE IBAN = IBAN;
        ELSE RAISE SaldoException;
        END IF;
    END;
        
    PROCEDURE CIERRE_CUENTA_SEGREGADA(IBN VARCHAR2) IS
    BEGIN 
         IF (SELECT * FROM FINTECH.CUENTA WHERE IBAN LIKE IBN)=NULL THEN
            RAISE CuentaException;
        END IF;
        IF (SELECT SALDO FROM FINTECH.CUENTA_REFERENCIA WHERE IBAN LIKE (SELECT CUENTA_REFERENCIA_IBAN FROM FINTECH.SEGREGADA WHERE IBAN LIKE IBN)) = 0 THEN
            UPDATE FINTECH.CUENTA_FINTECH SET ESTADO = '0', FECHABAJA = SYSDATE WHERE IBAN = IBAN;
        ELSE RAISE SaldoException;
        END IF;
    END;

END PK_GESTION_CUENTAS;

CREATE OR REPLACE VIEW V_SALDO_INDIVIDUAL(IDENTIFICACION, IBAN, SALDO, ABREVIATURA, CAMBIOEURO) AS 
SELECT INDIVIDUAL.ID, CUENTA_REFERENCIA.IBAN, CUENTA_REFERENCIA.SALDO, CUENTA_REFERENCIA.DIVISA_ABREVIATURA, DIVISA.CAMBIOEURO
FROM INDIVIDUAL, CUENTA_FINTECH, SEGREGADA, CUENTA_REFERENCIA, DIVISA WHERE INDIVIDUAL.ID = CUENTA_FINTECH.CLIENTE_ID AND CUENTA_FINTECH.IBAN = SEGREGADA.IBAN AND SEGREGADA.CUENTA_REFERENCIA_IBAN = SEGREGADA.IBAN AND DIVISA.ABREVIATURA = CUENTA_REFERENCIA.DIVISA_ABREVIATURA;

CREATE OR REPLACE VIEW V_SALDO_AUTORIZADO(IDENTIFICACION, IBAN, SALDO, ABREVIATURA, CAMBIOEURO) AS 
SELECT PERSONA_AUTORIZADA.ID, CUENTA_REFERENCIA.IBAN, CUENTA_REFERENCIA.SALDO, CUENTA_REFERENCIA.DIVISA_ABREVIATURA, DIVISA.CAMBIOEURO
FROM PERSONA_AUTORIZADA, AUTORIZACION, EMPRESA, CUENTA_FINTECH, SEGREGADA, CUENTA_REFERENCIA, DIVISA WHERE AUTORIZACION.PERSONA_AUTORIZADA_ID = PERSONA_AUTORIZADA.ID AND AUTORIZACION.EMPRESA_ID = EMPRESA.ID AND EMPRESA.ID = CUENTA_FINTECH.CLIENTE_ID AND CUENTA_FINTECH.IBAN = SEGREGADA.IBAN AND SEGREGADA.CUENTA_REFERENCIA_IBAN = SEGREGADA.IBAN AND DIVISA.ABREVIATURA = CUENTA_REFERENCIA.DIVISA_ABREVIATURA;

CREATE SEQUENCE SQ_TRANSACCION START WITH 1
INCREMENT BY 1;
/* TREH
CREATE OR REPLACE TRIGGER TR_TRANSACCION BEFORE INSERT ON TRANSACCION FOR EACH ROW
BEGIN
    :NEW.ID_UNICO = SELECT NEXT VALUE FOR SQ_TRANSACCION AS NextVehicleId;
END;
*/

/*
CREATE OR REPLACE VIEW V_TARJETA_MENSUAL
(IDENTIFICACION, NUMERO_TARJETA, GASTO, ABREVIATURA) AS 
SELECT CLIENTE.IDENTIFICACION, TARJETA.NUMERO, SUM(TRANSACCION.CANTIDAD) FROM CLIENTE, TRANSACCION, TARJETA, CUENTA_FINTECH WHERE CLIENTE.ID = CUENTA_FINTECH.CLIENTE_ID AND CUENTA_FINTECH.IBAN = TARJETA.CUENTA_IBAN AND CUENTA_FINTECH.IBAN = TRANSACCION.CUENTA_IBAN GROUP BY TRANSACCION.DIVISA_ABREVIATURA;*/
/*
CREATE OR REPLACE VIEW V_TARJETA_PENDIENTES
(IDENTIFICACION, NUMERO_TARJETA, PENDIENTES, ABREVIATURA) AS 
SELECT CLIENTE.IDENTIFICACION, TARJETA.NUMERO, SUM(TRANSACCION.CANTIDAD) FROM CLIENTE, TRANSACCION, TARJETA, CUENTA_FINTECH WHERE CLIENTE.ID = CUENTA_FINTECH.CLIENTE_ID AND CUENTA_FINTECH.IBAN = TARJETA.CUENTA_IBAN AND CUENTA_FINTECH.IBAN = TRANSACCION.CUENTA_IBAN GROUP BY TRANSACCION.DIVISA_ABREVIATURA;*/