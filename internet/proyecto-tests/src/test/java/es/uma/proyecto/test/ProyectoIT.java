package es.uma.proyecto.test;

import static org.hamcrest.CoreMatchers.is;
import static org.junit.Assert.assertThat;

import java.io.IOException;
import java.io.InputStream;
import java.text.ParseException;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;

import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;
// Generated by Selenium IDE
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import es.uma.proyecto.test.BaseDatos;

public class ProyectoIT {
	private WebDriver driver;
	private Map<String, Object> vars;
	JavascriptExecutor js;

	private static String baseURL;
	private static Map<String,String> propiedadesExtra = new HashMap<>();

	@BeforeClass
	public static void setupClass() {
		String server="localhost";
		try (InputStream is = ProyectoIT.class.getClassLoader().getResourceAsStream("pom.properties")) {
			Properties pomProperties = new Properties();
			pomProperties.load(is);
			server=pomProperties.getProperty("server.host");
			String databaseURL = "jdbc:mysql://"+server+":3306/sii";
			propiedadesExtra.put("javax.persistence.jdbc.url", databaseURL);
		} catch (IOException e) {
			e.printStackTrace();
		}
		baseURL="http://"+server+":8080/proyecto-war/";
	}

	@Before
	public void setUp() throws ParseException {
		driver = new ChromeDriver();
		js = (JavascriptExecutor) driver;
		vars = new HashMap<String, Object>();
	}
	
	@After
	public void tearDown() {
		driver.quit();
	}
	
	@SuppressWarnings("deprecation")
	@Test
	public void iniciarSesion() {
		driver.get("http://0.0.0.0:8080/proyecto-war/");
		driver.manage().window().setSize(new Dimension(790, 866));
		driver.findElement(By.id("login:user")).click();
		driver.findElement(By.id("login:user")).sendKeys("ponciano");
		driver.findElement(By.id("login:pass")).sendKeys("ponciano");
		driver.findElement(By.id("login:botonLogin")).click();
		assertThat(driver.findElement(By.cssSelector("i")).getText(), is("Ponciano"));
	}
	
	@SuppressWarnings("deprecation")
	@Test
	public void iniciarSesionPasswordMal() {
		driver.get("http://0.0.0.0:8080/proyecto-war/");
		driver.manage().window().setSize(new Dimension(790, 866));
		driver.findElement(By.id("login:user")).click();
		driver.findElement(By.id("login:user")).sendKeys("ponciano");
		driver.findElement(By.id("login:pass")).sendKeys("poncianoNoEs");
		driver.findElement(By.id("login:botonLogin")).click();
		driver.findElement(By.id("login:passwordMessage")).click();
		driver.findElement(By.cssSelector(".mensajes:nth-child(4)")).click();
		assertThat(driver.findElement(By.id("login:passwordMessage")).getText(), is("La contraseña no coincide"));
	}

	@SuppressWarnings("deprecation")
	@Test
	public void iniciarSesionCamposVacios() {
		driver.get("http://0.0.0.0:8080/proyecto-war/");
		driver.manage().window().setSize(new Dimension(790, 866));
		driver.findElement(By.id("login:botonLogin")).click();
		assertThat(driver.findElement(By.id("login:userMessage")).getText(), is("Valor obligatorio"));
		assertThat(driver.findElement(By.id("login:passwordMessage")).getText(), is("Valor obligatorio"));
	}

	@SuppressWarnings("deprecation")
	@Test
	public void iniciarSesionNoExisteUsuario() {
		driver.get("http://0.0.0.0:8080/proyecto-war/");
		driver.manage().window().setSize(new Dimension(790, 866));
		driver.findElement(By.id("login:user")).click();
		driver.findElement(By.id("login:user")).sendKeys("Inventado");
		driver.findElement(By.id("login:pass")).sendKeys("asdasd");
		driver.findElement(By.id("login:botonLogin")).click();
		assertThat(driver.findElement(By.id("login:userMessage")).getText(), is("La cuenta indicada no existe"));
	}

	@SuppressWarnings("deprecation")
	@Test
	public void registro() {
		driver.get("http://0.0.0.0:8080/proyecto-war/registro.xhtml");
		driver.manage().window().setSize(new Dimension(790, 866));
		driver.findElement(By.id("registro:nombre")).click();
		driver.findElement(By.id("registro:nombre")).sendKeys("David");
		driver.findElement(By.id("registro:pass")).sendKeys("David123");
		driver.findElement(By.id("registro:repass")).sendKeys("David123");
		driver.findElement(By.id("registro:email")).sendKeys("david@david.com");
		driver.findElement(By.name("registro:j_idt15")).click();
		assertThat(driver.findElement(By.cssSelector("p:nth-child(1)")).getText(), is("El registro se ha realizado con éxito."));
	}

	@Test
  public void registroCamposVacios() {
    driver.get("http://0.0.0.0:8080/proyecto-war/registro.xhtml");
    driver.manage().window().setSize(new Dimension(790, 866));
    driver.findElement(By.name("registro:j_idt15")).click();
    driver.findElement(By.cssSelector("tr:nth-child(1) > td:nth-child(3)")).click();
    assertThat(driver.findElement(By.cssSelector("tr:nth-child(1) > td:nth-child(3)")).getText(), is("Valor obligatorio"));
    assertThat(driver.findElement(By.cssSelector("tr:nth-child(2) > td:nth-child(3)")).getText(), is("Valor obligatorio"));
    assertThat(driver.findElement(By.cssSelector("tr:nth-child(3) > td:nth-child(3)")).getText(), is("Valor obligatorio"));
    assertThat(driver.findElement(By.cssSelector("tr:nth-child(4) > td:nth-child(3)")).getText(), is("Valor obligatorio"));
  }

  @Test
  public void registroEmailNoValido() {
    driver.get("http://0.0.0.0:8080/proyecto-war/registro.xhtml");
    driver.manage().window().setSize(new Dimension(790, 866));
    driver.findElement(By.id("registro:nombre")).click();
    driver.findElement(By.id("registro:nombre")).sendKeys("Juanito");
    driver.findElement(By.id("registro:pass")).sendKeys("Juanito123");
    driver.findElement(By.id("registro:repass")).sendKeys("Juanito123");
    driver.findElement(By.id("registro:email")).sendKeys("juanasdas");
    driver.findElement(By.name("registro:j_idt15")).click();
    driver.findElement(By.cssSelector("tr:nth-child(4) > td:nth-child(3)")).click();
    assertThat(driver.findElement(By.cssSelector("tr:nth-child(4) > td:nth-child(3)")).getText(), is("El email debe ser valido"));
  }

  @Test
  public void registroPasswordNoCoinciden() {
    driver.get("http://0.0.0.0:8080/proyecto-war/registro.xhtml");
    driver.manage().window().setSize(new Dimension(790, 866));
    driver.findElement(By.id("registro:nombre")).click();
    driver.findElement(By.id("registro:nombre")).sendKeys("Juanito");
    driver.findElement(By.id("registro:pass")).sendKeys("Juanito123");
    driver.findElement(By.id("registro:repass")).sendKeys("asdasd");
    driver.findElement(By.id("registro:email")).sendKeys("juan@juan.com");
    driver.findElement(By.name("registro:j_idt15")).click();
    driver.findElement(By.cssSelector("tr:nth-child(3) > td:nth-child(3)")).click();
    assertThat(driver.findElement(By.cssSelector("tr:nth-child(3) > td:nth-child(3)")).getText(), is("Las contraseñas deben coincidir."));
  }

  @Test
  public void registroPasswordNoValida() {
    driver.get("http://0.0.0.0:8080/proyecto-war/registro.xhtml");
    driver.manage().window().setSize(new Dimension(790, 866));
    driver.findElement(By.id("registro:nombre")).click();
    driver.findElement(By.id("registro:nombre")).sendKeys("Juanito");
    driver.findElement(By.id("registro:pass")).sendKeys("asdadd");
    driver.findElement(By.id("registro:repass")).sendKeys("asdadd");
    driver.findElement(By.id("registro:email")).sendKeys("juanito@juanito.com");
    driver.findElement(By.name("registro:j_idt15")).click();
    assertThat(driver.findElement(By.cssSelector("tr:nth-child(2) > td:nth-child(3)")).getText(), is("La contraseña debe ser valida"));
  }

  @Test
  public void registroUsuarioRepetido() {
    driver.get("http://0.0.0.0:8080/proyecto-war/registro.xhtml");
    driver.manage().window().setSize(new Dimension(790, 866));
    driver.findElement(By.cssSelector("table")).click();
    driver.findElement(By.id("registro:nombre")).click();
    driver.findElement(By.id("registro:nombre")).sendKeys("ponciano");
    driver.findElement(By.id("registro:pass")).sendKeys("Ponciano123");
    driver.findElement(By.id("registro:repass")).sendKeys("Ponciano123");
    driver.findElement(By.id("registro:email")).sendKeys("ponciano@ponciano.com");
    driver.findElement(By.name("registro:j_idt15")).click();
    assertThat(driver.findElement(By.cssSelector("tr:nth-child(1) > td:nth-child(3)")).getText(), is("Existe un usuario con la misma cuenta."));
  }
}